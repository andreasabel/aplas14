{-# OPTIONS --copatterns --sized-types #-}

-- Type interpretation and soundness of typing.

module Soundness where

open import Library
open import SizedInfiniteTypes
open import Terms
open import Substitution
open import SN
open import SN.AntiSubst
open import SN.AntiRename
open import SAT3

-- Type interpretation

โฆ_โง_ : (a : Ty) (n : โ) โ SAT a n
โฆ a โฬ b โง n  = โฆ a โง n โฆโโง โฆ b โง n
โฆ a รฬ b โง n  = โฆ a โง n โฆรโง โฆ b โง n
โฆ โธฬ aโ  โง n  = โฆโธโง P n   
  where
    P : โ n โ SATpred (force aโ) n
    P zero = _
    P (suc nโ) = โฆ force aโ โง nโ

mapโฆ_โง : โ (a : Ty) โ โ {m n l o} โ .(lโคm : l โคโ m) โ .(oโคn : o โคโ n) โ .(l โคโ o) โ โ {ฮ} {t : Tm ฮ a} โ SAT.satSet (โฆ a โง n) oโคn t 
                                           โ SAT.satSet (โฆ a โง m) lโคm t
mapโฆ_โง (a โฬ aโ) lโคm oโคn lโคo  ๐ก          = ฮป q qโคl ฯ ฯrefl ๐ข โ
       let .qโคm : _; qโคm = โคโ.trans qโคl lโคm
           .qโคo : _; qโคo = โคโ.trans qโคl lโคo
           .qโคn : _; qโคn = โคโ.trans qโคo oโคn in 
       mapโฆ aโ โง qโคm qโคn โคโ.refl (๐ก q qโคo ฯ ฯrefl (mapโฆ a โง qโคn qโคm โคโ.refl ๐ข))
mapโฆ_โง (a รฬ aโ)                       lโคm oโคn lโคo (t1 , t2)  = mapโฆ a โง lโคm oโคn lโคo t1 , mapโฆ aโ โง lโคm oโคn lโคo t2
mapโฆ_โง (โธฬ aโ) {l = zero}              lโคm oโคn _   โน0         = โน0
mapโฆ_โง (โธฬ aโ) {l = suc l}             lโคm oโคn ()  โน0 
mapโฆ_โง (โธฬ aโ) {l = zero}              lโคm oโคn lโคo (โน ๐)      = โน0
mapโฆ_โง (โธฬ aโ) {zero} {l = suc l}      ()  oโคn lโคo (โน ๐)
mapโฆ_โง (โธฬ aโ) {suc m} {zero} {suc l}  lโคm ()  lโคo (โน ๐)
mapโฆ_โง (โธฬ aโ) {suc m} {suc n} {suc l} lโคm oโคn lโคo (โน ๐)      = โน mapโฆ (force aโ) โง (predโคโ lโคm) (predโคโ oโคn) (predโคโ lโคo) ๐
mapโฆ_โง (โธฬ aโ)                         lโคm oโคn lโคo (ne ๐)     = ne (mapSNe lโคo ๐)
mapโฆ_โง (โธฬ aโ)                         lโคm oโคn lโคo (exp tโ ๐ก) = exp (mapโ lโคo tโ) (mapโฆ (โธฬ aโ) โง lโคm oโคn lโคo ๐ก)

mapโฆ_โงโ : โ (a : Ty) โ โ {m n} โ .(m โคโ n) โ โ {ฮ} {t : Tm ฮ a} โ t โ (โฆ a โง n) 
                                           โ t โ (โฆ a โง m)
mapโฆ_โงโ a mโคn (โฟ ๐ก) = โฟ (mapโฆ a โง โคโ.refl โคโ.refl mโคn ๐ก)

-- Context interpretation (semantic substitutions)

โฆ_โงCโจ_โฉ : โ ฮ {n m} โ .(m โคโ n) โ โ {ฮ} (ฯ : Subst ฮ ฮ) โ Set
โฆ ฮ โงCโจ mโคn โฉ  ฯ = โ {a} (x : Var ฮ a) โ ฯ x โโจ mโคn โฉ โฆ a โง _

โฆ_โงC : โ ฮ n {ฮ} (ฯ : Subst ฮ ฮ) โ Set
โฆ ฮ โงC n ฯ = โ {a} (x : Var ฮ a) โ ฯ x โ โฆ a โง n

-- Lift : โ {a n ฮ ฮ} {ฯ : Subst ฮ ฮ} (ฮธ : โฆ ฮ โงC n ฯ) โ โฆ a โท ฮ โงC n (lifts ฯ)
-- Lift ฮธ (zero eq) = โฟ SAT.satSNe (โฆ _ โง _) (var (zero eq))
-- Lift ฮธ (suc x)   = {! ฮธ x !}  -- TODO: semantic types closed under renaming

Ext : โ {a n ฮ ฮ} {t : Tm ฮ a} โ โ {m} .(mโคn : m โคโ n) โ (๐ : t โโจ mโคn โฉ โฆ a โง n) โ
      โ {ฯ : Subst ฮ ฮ} (ฮธ : โฆ ฮ โงCโจ mโคn โฉ ฯ) โ โฆ a โท ฮ โงCโจ mโคn โฉ (t โทs ฯ)
Ext {a} mโคn ๐ ฮธ (zero eq) = {! ๐ !} -- need to cast
Ext {a} mโคn ๐ ฮธ (suc x) = ฮธ x

Rename : โ {n ฮ ฮ'} โ โ {m} .(mโคn : m โคโ n) โ (ฯ : Ren ฮ ฮ') โ
         โ {ฮ}{ฯ : Subst ฮ ฮ} (ฮธ : โฆ ฮ โงCโจ mโคn โฉ ฯ) โ
         โฆ ฮ โงCโจ mโคn โฉ (ฯ โขs ฯ)
Rename mโคn ฯ ฮธ {a} x = โฟ SAT.satRename (โฆ a โง _) mโคn ฯ (โ ฮธ x)

Map : โ {m n l o} โ .(lโคm : l โคโ m) โ .(oโคn : o โคโ n) โ .(lโคo : l โคโ o) 
      โ โ {ฮ ฮ} {ฯ : Subst ฮ ฮ} (ฮธ : โฆ ฮ โงCโจ oโคn โฉ ฯ) โ โฆ ฮ โงCโจ lโคm โฉ ฯ
Map lโคm oโคn lโคo ฮธ {a} x = โฟ (mapโฆ a โง lโคm oโคn lโคo (โ ฮธ x))

โฆโโง : โ {n ฮ}{a : Ty} {bโ} {t : Tm ฮ (โธฬ ((delay a) โ bโ))} {u : Tm ฮ (โธ a)}
      โ โ {m} .(mโคn : m โคโ n) โ t โโจ mโคn โฉ (โฆ โธฬ ((delay a) โ bโ) โง n) โ u โโจ mโคn โฉ (โฆ โธฬ (delay a) โง n) โ (t โ u) โโจ mโคn โฉ (โฆ โธฬ bโ โง n)
โฆโโง mโคn (โฟ โน0) (โฟ โน0) = โฟ (exp ฮฒโน โน0)
โฆโโง mโคn (โฟ โน0) (โฟ ne ๐) = โฟ (ne (elim ๐ (โr โน0)))
โฆโโง mโคn (โฟ โน0) (โฟ exp tโ ๐ก1) = โฟ exp (cong (โr _) (โr _) tโ) (โ โฆโโง mโคn (โฟ โน0) (โฟ ๐ก1))
โฆโโง {suc n} {a = a} {bโ = bโ}  {m = suc m} mโคn (โฟ (โน ๐)) (โฟ (โน_ {t = u} ๐โ)) 
 = โฟ exp ฮฒโน
     (โน โก.subst (ฮป t โ SAT.satSet (โฆ force bโ โง n) (predโคโ mโคn) (app t u))
          renId (๐ m โคโ.refl id TODO ๐โ))
โฆโโง {zero} {a = a} {bโ = bโ}  {m = suc m} () (โฟ (โน ๐)) _
โฆโโง {suc n} {a = a} {bโ = bโ}  {m = suc m} mโคn (โฟ (โน ๐)) (โฟ ne ๐) = โฟ (ne (elim ๐ (โr (โน SAT.satSN ((โฆ a โง n) โฆโโง (โฆ force bโ โง n)) (predโคโ mโคn) ๐))))
โฆโโง mโคn (โฟ (โน ๐)) (โฟ exp tโ ๐ก1) = โฟ exp (cong (โr _) (โr _) tโ) (โ โฆโโง  mโคn (โฟ (โน ๐)) (โฟ ๐ก1))
โฆโโง mโคn (โฟ ne ๐) (โฟ ๐ก1) = โฟ ne (elim ๐ (SAT.satSN (โฆ _ โง _) mโคn ๐ก1 โl))
โฆโโง mโคn (โฟ exp tโ ๐ก) (โฟ ๐ก1) = โฟ exp (cong (_ โl) (_ โl) tโ) (โ โฆโโง mโคn (โฟ ๐ก) (โฟ ๐ก1))

soundโค : โ {n a ฮ} (t : Tm ฮ a) {ฮ} {ฯ : Subst ฮ ฮ} โ โ {m} .(mโคn : m โคโ n) โ (ฮธ : โฆ ฮ โงCโจ mโคn โฉ ฯ) โ  subst ฯ t โโจ mโคn โฉ โฆ a โง n
soundโค (var x)     mโคn ฮธ = ฮธ x
soundโค {n} (abs {a = a} {b = b} t) {ฯ = ฯ}    mโคn ฮธ = โฆabsโง {๐ = โฆ _ โง _} {๐ = โฆ _ โง _} mโคn (ฮป lโคm ฯ {u} ๐ข โ 
  let open โก-Reasoning
      eq : subst (u โทs (ฯ โขs ฯ)) t โก subst0 u (subst (lifts ฯ) (subst (lifts ฯ) t))
      eq = begin

             subst (u โทs (ฯ โขs ฯ)) t

           โกโจ subst-ext (cons-to-sgs u _) t โฉ

              subst (sgs u โขs lifts (ฯ โขs ฯ)) t

           โกโจ subst-โ _ _ t โฉ

             subst0 u (subst (lifts (ฯ โขs ฯ)) t)

           โกโจ โก.cong (subst0 u) (subst-ext (lifts-โ ฯ ฯ) t) โฉ

             subst0 u (subst (lifts ฯ โขs lifts ฯ) t)

           โกโจ โก.cong (subst0 u) (subst-โ (lifts ฯ) (lifts ฯ) t) โฉ

             subst0 u (subst (lifts ฯ) (subst (lifts ฯ) t))
           โ
      .lโคn : _
      lโคn = โคโ.trans lโคm mโคn
  in โก.subst (ฮป tu โ tu โโจ lโคn โฉ (โฆ b โง n)) eq (soundโค t lโคn 
                   (Ext lโคn ๐ข (Rename lโคn ฯ (Map lโคn mโคn lโคm ฮธ)))))
soundโค (app t tโ)  mโคn ฮธ = โฆappโง mโคn (soundโค t mโคn ฮธ) (soundโค tโ mโคn ฮธ)
soundโค (pair t tโ) mโคn ฮธ = โฆpairโง mโคn (soundโค t mโคn ฮธ) (soundโค tโ mโคn ฮธ)
soundโค (fst t)     mโคn ฮธ = โฆfstโง {๐ = โฆ _ โง _} {๐ = โฆ _ โง _} mโคn (soundโค t mโคn ฮธ)
soundโค (snd t)     mโคn ฮธ = โฆsndโง {๐ = โฆ _ โง _} {๐ = โฆ _ โง _} mโคn (soundโค t mโคn ฮธ)
soundโค (t โ tโ)    mโคn ฮธ = โฆโโง mโคn (soundโค t mโคn ฮธ) (soundโค tโ mโคn ฮธ)
soundโค         (โน t) {m = zero}  mโคn ฮธ = โฟ โน0
soundโค {zero}  (โน t) {m = suc m} ()  ฮธ 
soundโค {suc n} (โน t) {m = suc m} mโคn ฮธ = โฟ (โน (โ soundโค t (predโคโ mโคn) (Map (predโคโ mโคn) mโคn nโคsn ฮธ)))

sound : โ {n a ฮ} (t : Tm ฮ a) {ฮ} {ฯ : Subst ฮ ฮ} (ฮธ : โฆ ฮ โงC n ฯ) โ subst ฯ t โ โฆ a โง n
sound t ฮธ = soundโค t โคโ.refl ฮธ
